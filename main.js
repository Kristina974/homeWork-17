 'use strict';

// // 1) Написать функцию, которая на вход принимает строку, возвращает массив чисел, которые являются граничными, то есть не внутри текста.
// // Пример работы:
// // "привет 12 ываыва34 98 3423ыавыа" -> [12, 98]
// // "10 ываыв 8 234ы" -> [10, 8]

function getNumbers(input) { 
  return input.match(/[0-9]{1,}\s|\s[0-9]{1,}\s/g);
}

let firstTest = getNumbers('привет 12 ываыва34 98 3423ыавыа'); 
let secondTest = getNumbers('10 ываыв 8 234ы'); 

console.log(firstTest);
console.log(secondTest);


// // 2) Написать функцию для валидации api v4 адреса и описать как она работает,
// что делает конкретный символ на конкретной позиции регулярного выражения
// // Пример работы
// // "127.0.0.0" -> true
// // "127.0.155.10" -> true
// // "127.0т155.10" -> false

function validation(input,api) { 
  return input.test(api);
}

let thirdTest = validation(/^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}.[0-9]{1,3}$/, '127.0.0.0'); 
let fourthTest = validation(/^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}.[0-9]{1,3}$/, '127.0.155.10'); 
let fifthTest = validation(/^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}.[0-9]{1,3}$/, '127.0т155.10');

console.log(thirdTest, fourthTest, fifthTest);

// 127. - ^[0-9]{1,3}\.
// 0. - [0-9]{1,3}\.
// 155. - [0-9]{1,3}\.
// 10 - [0-9]{1,3}$

// ^ - определяет начало строки (положение относительно остального текста)
// $ - определяет конец строки (положение относительно остального текста)
// () - определяют само выражение и подвыражения внутри
// [1-9] - диапазон цифр от 1 до 9
// {1,3} - количество цифр от 1 до 3 - 
// . - символ точки.экранируется


